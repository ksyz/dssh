/*
 * DSSH Groovy Script Loader
 */
package dssh.scripting;

import groovy.lang.GroovyClassLoader;
import groovy.lang.GroovyCodeSource;
import java.io.BufferedInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.net.MalformedURLException;
import org.codehaus.groovy.control.CompilationFailedException;
import org.codehaus.groovy.control.CompilationUnit;
import org.codehaus.groovy.control.CompilerConfiguration;

/**
 *
 * @author jurajbednar
 */
public class GroovyScriptLoader implements ScriptLoader {

    public GroovyScriptLoader() {
    }

    public Object getScriptInstance(String groovyscriptname) throws IOException {
        File groovyScript = new File(groovyscriptname);
        // File groovyCompiledScript = new File(groovyscriptname.replace(".groovy", ".class"));

        if (!groovyScript.exists()) {
            return null;
        }


        /* CompilerConfiguration configuration = new CompilerConfiguration();
        configuration.setTargetDirectory(groovyScript.getParent());
        GroovyClassLoader gcl = new GroovyClassLoader(getClass().getClassLoader(),
                configuration, false);*/

        GroovyClassLoader gcl = new GroovyClassLoader();

        /*
        if ((groovyCompiledScript.exists()) && (groovyCompiledScript.lastModified() >
                groovyScript.lastModified())) {
            gcl.setShouldRecompile(Boolean.TRUE);
        }
        else gcl.setShouldRecompile(Boolean.FALSE);
        */
        
        gcl.addURL(groovyScript.getParentFile().toURI().toURL());
        gcl.addURL(new File(System.getenv("HOME") + File.separatorChar + ".dssh").toURI().toURL());


        Class cls;
        try {
            cls = gcl.parseClass(new GroovyCodeSource(groovyScript), false);
            Object aScript = cls.newInstance();
            return aScript;
        } catch (CompilationFailedException ex) {
            System.err.println("Compilation failed: " + ex.getMessage());
            System.exit(2);
        } catch (FileNotFoundException ex) {
            System.err.println("File not found: " + ex.getMessage());
            System.exit(2);
        } catch (InstantiationException ex) {
            System.err.println("Instantiation exception: " + ex.getMessage());
            System.exit(2);
        } catch (IllegalAccessException ex) {
            System.err.println("Illegal access exception: " + ex.getMessage());
            System.exit(2);
        }
        return null;

    }

}
